{"ast":null,"code":"var _jsxFileName = \"/Users/yang-useong/ReactApp/chats/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2)\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicWindow: {\n    width: '30%',\n    height: '300px',\n    borderRight: '1px solid grey'\n  },\n  chatWindow: {\n    width: '70%',\n    height: '300px'\n  },\n  chatBox: {\n    width: '85%'\n  },\n  button: {\n    width: '85%'\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: \"Chat App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h4\",\n        children: \"Topic Placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.topicWindow,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: ['topic'].map(topic => /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: topic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)\n            }, topic, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatWindow,\n          children: [{\n            from: 'user',\n            msg: 'hello'\n          }].map((chat, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.flex,\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              className: classes.chip,\n              label: chat.from\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"p\",\n              children: chat.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Standard\",\n          className: classes.chatBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/yang-useong/ReactApp/chats/src/Dashboard.js"],"names":["React","makeStyles","Paper","Typography","List","ListItem","ListItemText","Chip","Button","TextField","useStyles","theme","root","margin","padding","spacing","flex","display","alignItems","topicWindow","width","height","borderRight","chatWindow","chatBox","button","Dashboard","classes","map","topic","from","msg","chat","i","chip"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: '50px',\n        padding: theme.spacing(3, 2),\n    },\n    flex: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    topicWindow: {\n        width: '30%',\n        height: '300px',\n        borderRight: '1px solid grey'\n    },\n    chatWindow: {\n        width: '70%',\n        height: '300px'\n    },\n    chatBox: {\n        width: '85%'\n    },\n    button: {\n        width: '85%'\n    }\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant='h5' component='h3'>\n            Chat App\n        </Typography>\n        <Typography component='h4'>\n            Topic Placeholder\n        </Typography>\n        <div className={classes.flex}>\n            <div className={classes.topicWindow}>\n                <List>\n                    {\n                        ['topic'].map(topic => (\n                            <ListItem key={topic} button>\n                                <ListItemText primary={topic} />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </div>\n            <div className={classes.chatWindow}>\n                    {\n                    [{from: 'user', msg: 'hello'}].map((chat, i) => (\n                        <div className={classes.flex}>\n                            <Chip className={classes.chip} label={chat.from}/>\n                            <Typography variant='p'>{chat.msg}</Typography>\n                        </div>\n                    ))\n                    }\n            </div>\n        </div>\n            <div className={classes.flex}>\n                <TextField \n                    id=\"standard-basic\" \n                    label=\"Standard\" \n                    className={classes.chatBox}\n                />\n                <Button variant=\"contained\" color=\"primary\">\n                    Primary\n                </Button>\n            </div>\n      </Paper>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}