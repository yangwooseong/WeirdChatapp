{"ast":null,"code":"var _jsxFileName = \"/Users/yang-useong/ReactApp/chats/src/Store.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CTX = /*#__PURE__*/React.createContext();\n/*\n    msg: {\n        from: 'user',\n        msg: 'hi',\n        topic: 'general'\n    }\n\n    state: {\n        topic1: [\n            {msg}, {msg}\n        ]\n        topic2: [\n            {msg}\n        ]\n    }\n*/\n\nconst initState = {\n  general: [{\n    from: 'aaron',\n    msg: 'hello'\n  }, {\n    from: 'aaron',\n    msg: 'hi'\n  }],\n  topic2: [{\n    from: 'aaron',\n    msg: 'hola'\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg,\n    topic\n  } = action.payload;\n\n  switch (action.type) {\n    case 'RECEIVE_MESSAGE':\n      return { ...state,\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nexport default function Store(props) {\n  _s();\n\n  if (!socket) {\n    socket = io('ws://127.0.0.1:5000', {\n      transports: [\"websocket\"]\n    });\n    socket.on('chat message', msg => {\n      console.log({\n        msg\n      });\n    });\n  }\n\n  const user = 'aaron';\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n  return /*#__PURE__*/_jsxDEV(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Store, \"vrFk29yLryXB0VLT2D60PCem8hY=\");\n\n_c = Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/yang-useong/ReactApp/chats/src/Store.js"],"names":["React","io","CTX","createContext","initState","general","from","msg","topic2","reducer","state","action","topic","payload","type","socket","sendChatAction","value","emit","Store","props","transports","on","console","log","user","allChats","dispatch","useReducer","children"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,OAAO,MAAMC,GAAG,gBAAGF,KAAK,CAACG,aAAN,EAAZ;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADK,EAEL;AAACD,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAFK,CADK;AAKdC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADI;AALM,CAAlB;;AAUA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,QAAM;AAACL,IAAAA,IAAD;AAAOC,IAAAA,GAAP;AAAYK,IAAAA;AAAZ,MAAqBD,MAAM,CAACE,OAAlC;;AAEA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,iBAAL;AACI,aAAO,EACH,GAAGJ,KADA;AAEH,SAACE,KAAD,GAAS,CACL,GAAGF,KAAK,CAACE,KAAD,CADH,EAEL;AACIN,UAAAA,IADJ;AAEIC,UAAAA;AAFJ,SAFK;AAFN,OAAP;;AAUJ;AACI,aAAOG,KAAP;AAbR;AAeH;;AAED,IAAIK,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACjC,MAAG,CAACL,MAAJ,EAAY;AACRA,IAAAA,MAAM,GAAGd,EAAE,CAAC,qBAAD,EAAwB;AAAEoB,MAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,KAAxB,CAAX;AACAN,IAAAA,MAAM,CAACO,EAAP,CAAU,cAAV,EAA0Bf,GAAG,IAAI;AAC7BgB,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACjB,QAAAA;AAAD,OAAZ;AACH,KAFD;AAGH;;AAED,QAAMkB,IAAI,GAAG,OAAb;AAEA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuB3B,KAAK,CAAC4B,UAAN,CAAiBnB,OAAjB,EAA0BL,SAA1B,CAA7B;AAEA,sBACI,QAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACsB,MAAAA,QAAD;AAAWV,MAAAA,cAAX;AAA2BS,MAAAA;AAA3B,KAArB;AAAA,cACKL,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAjBuBV,K;;KAAAA,K","sourcesContent":["import React from 'react'\nimport { io } from 'socket.io-client'\n\nexport const CTX = React.createContext(); \n\n/*\n    msg: {\n        from: 'user',\n        msg: 'hi',\n        topic: 'general'\n    }\n\n    state: {\n        topic1: [\n            {msg}, {msg}\n        ]\n        topic2: [\n            {msg}\n        ]\n    }\n*/\n\nconst initState = {\n    general: [\n        {from: 'aaron', msg: 'hello'},\n        {from: 'aaron', msg: 'hi'}\n    ],\n    topic2: [\n        {from: 'aaron', msg: 'hola'}\n    ]\n}\n\nfunction reducer(state, action) {\n    const {from, msg, topic} = action.payload\n\n    switch(action.type) {\n        case 'RECEIVE_MESSAGE':\n            return {\n                ...state,\n                [topic]: [\n                    ...state[topic],\n                    {\n                        from,\n                        msg\n                    }\n                ]\n            }\n        default:\n            return state\n    }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value)\n}\n\nexport default function Store(props) {\n    if(!socket) {\n        socket = io('ws://127.0.0.1:5000', { transports: [\"websocket\"] })\n        socket.on('chat message', msg => {\n            console.log({msg})\n        })\n    }\n\n    const user = 'aaron'\n\n    const [allChats, dispatch] = React.useReducer(reducer, initState)\n\n    return (\n        <CTX.Provider value={{allChats, sendChatAction, user}} >\n            {props.children}\n        </CTX.Provider>\n    )\n} "]},"metadata":{},"sourceType":"module"}